name: Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install mike

    - name: Build documentation
      run: mkdocs build

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: ./site

  deploy:
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install mike
      run: |
        pip install mike
        pip install -e .[dev]

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: ./site

    - name: Configure git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Deploy with mike
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          # Deploy tagged version on release
          VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')
          mike deploy --push --update-aliases $VERSION latest
        else
          # Deploy latest on main branch pushes
          mike deploy --push latest
        fi