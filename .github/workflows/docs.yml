name: Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install mike

  deploy:
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install mike
      run: |
        pip install mike
        pip install -e .[dev]

    - name: Configure git
      run: |
        git config --global user.name 'Prostata Doc Bot'
        git config --global user.email 'merlos@users.noreply.github.com'

    - name: Fetch gh-pages branch
      run: |
        git fetch origin gh-pages:gh-pages || true

    - name: Deploy with mike
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          # Deploy tagged version on release
          VERSION=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//' | sed 's/^releases\///' | sed 's/^release-//')
          mike deploy --push --update-aliases $VERSION latest
        else
          # Deploy development on main branch pushes
          mike deploy --push development
        fi